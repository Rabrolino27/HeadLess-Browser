{"version":3,"sources":["../../src/routines/proxyRequest.js"],"names":["log","Logger","child","namespace","defaultChromeHeaders","accept","appendDefaultChromeHeaders","request","nextHeaders","headers","host","URL","url","hostname","isNavigationRequest","proxyRequest","proxyRequestConfiguration","page","proxyUrl","startsWith","continue","debug","body","postData","method","puppeteerCookies","cookies","cookieJar","CookieJar","deserializeSync","map","puppeteerCookie","rejectPublicSuffixes","storeType","version","getCookieString","bind","setCookie","gotCookieJar","rawCookie","ignoreError","agent","http","HttpProxyAgent","https","HttpsProxyAgent","response","followRedirect","responseType","retry","throwHttpErrors","error","abort","Error","respond","status","statusCode"],"mappings":"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","sourcesContent":["// @flow\n\nimport {\n  promisify,\n} from 'util';\nimport type {\n  Request,\n} from 'puppeteer';\nimport got from 'got';\nimport {\n  CookieJar,\n} from 'tough-cookie';\nimport {\n  serializeError,\n} from 'serialize-error';\nimport HttpProxyAgent from 'http-proxy-agent';\nimport HttpsProxyAgent from 'https-proxy-agent';\nimport {\n  formatPuppeteerCookieAsToughCookie,\n} from '../utilities';\nimport type {\n  ProxyRequestConfigurationType,\n} from '../types';\nimport Logger from '../Logger';\nimport getAllCookies from './getAllCookies';\n\nconst log = Logger.child({\n  namespace: 'proxyRequest',\n});\n\nconst defaultChromeHeaders = {\n  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\n  'accept-encoding': 'gzip, deflate, br',\n  'accept-language': 'en',\n};\n\n/**\n * @see https://github.com/puppeteer/puppeteer/issues/5364\n */\nconst appendDefaultChromeHeaders = (request: Request) => {\n  let nextHeaders = {\n    ...request.headers(),\n    ...defaultChromeHeaders,\n    host: new URL(request.url()).hostname,\n  };\n\n  if (request.isNavigationRequest()) {\n    nextHeaders = {\n      ...nextHeaders,\n      'sec-fetch-mode': 'navigate',\n      'sec-fetch-site': 'none',\n      'sec-fetch-user': '?1',\n    };\n  } else {\n    nextHeaders = {\n      ...nextHeaders,\n      'sec-fetch-mode': 'no-cors',\n      'sec-fetch-site': 'same-origin',\n    };\n  }\n\n  return nextHeaders;\n};\n\nconst proxyRequest = async (proxyRequestConfiguration: ProxyRequestConfigurationType): Promise<void> => {\n  const {\n    page,\n    proxyUrl,\n    request,\n  } = proxyRequestConfiguration;\n\n  // e.g. data URI scheme\n  if (!request.url().startsWith('http://') && !request.url().startsWith('https://')) {\n    request.continue();\n\n    return;\n  }\n\n  const headers = appendDefaultChromeHeaders(request);\n\n  log.debug({\n    body: request.postData(),\n    headers,\n    method: request.method(),\n    url: request.url(),\n  }, 'making a request using HTTP proxy');\n\n  const puppeteerCookies = (await getAllCookies(page)).cookies;\n\n  const cookieJar = CookieJar.deserializeSync({\n    cookies: puppeteerCookies.map((puppeteerCookie) => {\n      return formatPuppeteerCookieAsToughCookie(puppeteerCookie);\n    }),\n    rejectPublicSuffixes: true,\n    storeType: 'MemoryCookieStore',\n    version: 'tough-cookie@2.0.0',\n  });\n\n  const getCookieString = promisify(cookieJar.getCookieString.bind(cookieJar));\n  const setCookie = promisify(cookieJar.setCookie.bind(cookieJar));\n\n  const gotCookieJar = {\n    getCookieString: (url) => {\n      return getCookieString(url);\n    },\n    setCookie: (rawCookie: string, url: string) => {\n      return setCookie(\n        rawCookie,\n        url,\n        {\n          ignoreError: true,\n        },\n      );\n    },\n  };\n\n  let agent;\n\n  if (proxyRequestConfiguration.agent) {\n    agent = proxyRequestConfiguration.agent;\n  } else if (proxyUrl) {\n    agent = {\n      http: new HttpProxyAgent(proxyUrl.http || proxyUrl),\n      https: new HttpsProxyAgent(proxyUrl.https || proxyUrl),\n    };\n  }\n\n  let response;\n\n  try {\n    response = await got(request.url(), {\n      agent,\n      body: request.postData(),\n      cookieJar: gotCookieJar,\n      followRedirect: false,\n      headers,\n      method: request.method(),\n      responseType: 'buffer',\n      retry: 0,\n      throwHttpErrors: false,\n    });\n  } catch (error) {\n    log.error({\n      error: serializeError(error),\n    }, 'could not complete HTTP request due to an error');\n\n    request.abort();\n\n    return;\n  }\n\n  if (!response) {\n    throw new Error('response object is not present.');\n  }\n\n  await request.respond({\n    body: response.body,\n    headers: response.headers,\n    status: response.statusCode,\n  });\n};\n\nexport default async (proxyRequestConfiguration: ProxyRequestConfigurationType) => {\n  try {\n    await proxyRequest(proxyRequestConfiguration);\n  } catch (error) {\n    log.error({\n      error: serializeError(error),\n    }, 'could not proxy request due to an error');\n\n    proxyRequestConfiguration.request.abort();\n  }\n};\n"],"file":"proxyRequest.js"}